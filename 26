#include <stdio.h>
#include <stdlib.h>
#include <fcntl.h>
#include <unistd.h>
#include <string.h>

#define FILENAME "file_operations.txt"

// Function to create and write to a file
void create_and_write_file() {
    int fd;
    const char* text = "This is a file management demonstration using C.\n";

    // Open the file (create it if it doesn't exist, truncate it if it does)
    fd = open(FILENAME, O_CREAT | O_WRONLY | O_TRUNC, 0644);  // rw-r--r--
    if (fd == -1) {
        perror("Error opening file for writing");
        exit(1);
    }

    // Write text to the file
    ssize_t bytes_written = write(fd, text, strlen(text));
    if (bytes_written == -1) {
        perror("Error writing to file");
        close(fd);
        exit(1);
    }
    printf("Successfully written to the file: %s\n", FILENAME);

    // Close the file
    if (close(fd) == -1) {
        perror("Error closing file");
        exit(1);
    }
    printf("File closed successfully.\n");
}

// Function to read from an existing file
void read_file() {
    int fd;
    char buffer[256];

    // Open the file for reading
    fd = open(FILENAME, O_RDONLY);
    if (fd == -1) {
        perror("Error opening file for reading");
        exit(1);
    }

    // Read content from the file
    ssize_t bytes_read = read(fd, buffer, sizeof(buffer) - 1);
    if (bytes_read == -1) {
        perror("Error reading from file");
        close(fd);
        exit(1);
    }
    buffer[bytes_read] = '\0';  // Null-terminate the string

    // Print the content of the file
    printf("Content read from the file:\n%s", buffer);

    // Close the file
    if (close(fd) == -1) {
        perror("Error closing file");
        exit(1);
    }
    printf("File closed successfully.\n");
}

// Function to delete a file
void delete_file() {
    if (unlink(FILENAME) == -1) {
        perror("Error deleting the file");
        exit(1);
    }
    printf("File deleted successfully.\n");
}

// Function to append to an existing file
void append_to_file() {
    int fd;
    const char* append_text = "Appending some new content to the file.\n";

    // Open the file in append mode
    fd = open(FILENAME, O_WRONLY | O_APPEND);
    if (fd == -1) {
        perror("Error opening file for appending");
        exit(1);
    }

    // Write the new content to the file
    ssize_t bytes_written = write(fd, append_text, strlen(append_text));
    if (bytes_written == -1) {
        perror("Error appending to file");
        close(fd);
        exit(1);
    }
    printf("Successfully appended to the file: %s\n", FILENAME);

    // Close the file
    if (close(fd) == -1) {
        perror("Error closing file");
        exit(1);
    }
    printf("File closed successfully.\n");
}

// Main function to demonstrate file management operations
int main() {
    // Step 1: Create and write to the file
    create_and_write_file();

    // Step 2: Read the content from the file
    read_file();

    // Step 3: Append additional content to the file
    append_to_file();

    // Step 4: Read the content again after appending
    read_file();

    // Step 5: Delete the file
    delete_file();

    return 0;
}
